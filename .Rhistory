geom_hline(data = mn, aes(yintercept = mean_val, color = group)) +
geom_hline(data = sd, aes(yintercept = sd_val, color = group))
ggplot(data = xy, aes(x = group, y = QualityScore, color = group)) +
geom_point(shape = 17, size = 4) +
geom_hline(data = mn, aes(yintercept = mean_val, color = group))
ggplot(data = xy, aes(x = group, y = QualityScore, color = group)) +
geom_point(shape = 17, size = 4) +
#  geom_hline(data = mn, aes(yintercept = mean_val, color = group)) +
geom_hline(data = sd, aes(yintercept = mean_val, color = group))
ggplot(data = xy, aes(x = group, y = QualityScore, color = group)) +
geom_point(shape = 17, size = 4) +
geom_hline(data = mn, aes(yintercept = mean_val, color = group)) +
geom_hline(data = std, aes(yintercept = sd_val, color = group))
ggplot(data = xy, aes(x = group, y = QualityScore, color = group)) +
geom_point(shape = 17, size = 4) +
#  geom_hline(data = mn, aes(yintercept = mean_val, color = group)) +
geom_hline(data = std, aes(yintercept = sd_val, color = group))
std <- xy %>% group_by(group) %>% summarize(sd_val=sd(QualityScore)) %>%
summarize(sd1=mean(QualityScore) - sd_val/2) %>%
summarize(sd2 = mean(QualityScore) + sd_val/2)
rlang::last_error()
std <- xy %>% group_by(group) %>% summarize(sd_val=sd(QualityScore)) %>%
summarize(sd1=mean(xy$QualityScore) - sd_val/2) %>%
summarize(sd2 = mean(xy$QualityScore) + sd_val/2)
std <- xy %>% group_by(group) %>% summarize(sd_val=sd(QualityScore)) %>%
summarize(sd1=mean(xy$QualityScore) - sd_val/2) %>%
summarize(sd2 = mean(xy$QualityScore) + std$sd_val/2)
std
?summarize
std <- xy %>% group_by(group) %>% summarize(sd_val=sd(QualityScore)) %>%
sd1=mean(xy$QualityScore) - sd_val/2 %>%
sd2 = mean(xy$QualityScore + std$sd_val/2
)
std <- xy %>% group_by(group) %>% summarize(sd_val=sd(QualityScore)) %>%
sd1=mean(xy$QualityScore) - sd_val/2 %>%
sd2 = mean(xy$QualityScore) + std$sd_val/2
std <- xy %>% group_by(group) %>% summarize(sd_val=sd(QualityScore)) %>%
mutate(sd1=mean(xy$QualityScore) - sd_val/2) %>%
mutate(sd2 = mean(xy$QualityScore) + std$sd_val/2)
std <- xy %>% group_by(group) %>% summarize(sd_val=sd(QualityScore)) %>%
mutate(sd1=mean(xy$QualityScore) - sd_val/2)
std
std <- xy %>% group_by(group) %>% summarize(sd_val=sd(QualityScore)) %>%
mutate(sd1=mean(xy$QualityScore) - sd_val/2) %>%
mutate(sd2 = mean(xy$QualityScore) + sd_val/2)
std
ggplot(data = xy, aes(x = group, y = QualityScore, color = group)) +
geom_point(shape = 17, size = 4) +
#  geom_hline(data = mn, aes(yintercept = mean_val, color = group)) +
geom_hline(data = std, aes(yintercept = sd1, color = group)) +
geom_hline(data = std, aes(yintercept = sd2, color = group))
sd(xy$QualityScore)
sd(xy$QualityScore)/sqrt(8)
sd(xy$QualityScore[1:4,])/sqrt(4)
sd(xy$QualityScore[1:4])/sqrt(4)
sd(xy$QualityScore[5:8])/sqrt(4)
sd(xy$QualityScore[5:8])/sqrt(4) + 10.40833
sd(xy$QualityScore[5:8])/sqrt(4) + 1.040833
2.417726/2
t.test(QualityScore, group, data = xy)
xy
t.test(xy$QualityScore, xy$group)
t.test(QualityScore ~ group, data = xy)
library(lme4)
?cbind
cbind(1, 1:3)
?lmer
View(df)
df <- cbind(c(1, 2, 3, 4, 1, 2, 3, 2), rep(c("r1", "r2"), each = 4))
df <- cbind(c(2, 2, 3, 4, 1, 2, 3, 2), rep(c("r1", "r2"), each = 4))
df <- cbind(rep(c(1, 2, 3, 4), 2), c(2, 2, 3, 4, 1, 2, 3, 2), rep(c("r1", "r2"), each = 4))
lmer(rating ~ 1 + rater + item)
lmer(rating ~ 1 + rater + item, data = df)
colnames(df) <- c("item", "rating", "rater")
lmer(rating ~ 1 + rater + item, data = df)
View(df)
lmer(rating ~ rater + item, data = df)
df <- data.frame(df)
lmer(rating ~ rater + item, data = df)
lmer(rating ~ 1 + rater + item, data = df)
lmer(rating ~ 1 + (1|rater) + item, data = df)
lmer(rating ~ 1 + (1|rater) + (1|item), data = df)
str(df)
df <- cbind(rep(c(1, 2, 3, 4), 2),
c(2, 2, 3, 4, 1, 2, 3, 2),
rep(c("1", "2"), each = 4))
colnames(df) <- c("item", "rating", "rater")
df <- data.frame(df)
colnames(df)
str(df)
df <- cbind(rep(c(1, 2, 3, 4), 2),
c(2, 2, 3, 4, 1, 2, 3, 2),
rep(c("1", "2"), each = 4))
str(df)
df <- data.frame(cbind(rep(c(1, 2, 3, 4), 2),
c(2, 2, 3, 4, 1, 2, 3, 2),
rep(c("1", "2"), each = 4)))
colnames(df) <- c("item", "rating", "rater")
str(df)
df$rating <- as.numeric(df$rating)
str(df)
lmer(rating ~ 1 + (1|rater) + (1|item), data = df)
x <- lmer(rating ~ 1 + (1|rater) + (1|item), data = df)
View(x)
??ICC
psych::ICC
VarCorr(x)
x
summary(x)
View(summary(x))
x$varcor
summary(x)$varcor
df <- data.frame(item = factor(rep(c(1, 2, 3, 4)),
rating = c(2, 2, 3, 4, 1, 2, 3, 2),
rater = rep(c("r1", "r2"), each = 4)))
df <- data.frame(item = factor(rep(c(1, 2, 3, 4), 2),
rating = c(2, 2, 3, 4, 1, 2, 3, 2),
rater = rep(c("r1", "r2"), each = 4)))
z <- data.frame(s = c(1, 2), j = c(2, 3))
View(z)
df <- data.frame(item = factor(rep(c(1, 2, 3, 4), 2))
)
df <- data.frame(item = factor(rep(c(1, 2, 3, 4), 2)),
rating = c(2, 2, 3, 4, 1, 2, 3, 2),
rater = rep(c("r1", "r2"), each = 4)))
df <- data.frame(item = factor(rep(c(1, 2, 3, 4), 2)),
rating = c(2, 2, 3, 4, 1, 2, 3, 2),
rater = rep(c("r1", "r2"), each = 4))
str(df)
x <- lmer(rating ~ 1 + (1|rater) + (1|item), data = df)
x$varcor
summary(x)$varcor
.37/(.55+.37)
.37/(.55+.37)["item"]
summary(x)$varcor["item"]
View(summary(x)$varcor)
View(summary(x)$varcor["item"])
View(summary(x)$varcor[["item"]])
summary(x)$varcor[["item"]]
View(summary(x)$varcor[["item"]])
summary(x)$varcor[1,1]
summary(x)$varcor[1]
summary(x)$varcor[2]
summary(x)$varcor[3]
summary(x)
VarCorr(x, comp = "Variance")
VarCorr(x)
View(VarCorr(x))
VarCorr(x)[1,]
VarCorr(x)[1]
as.data.frame(VarCorr(x))
as.data.frame(VarCorr(x))[1, 4]
z <- as.data.frame(VarCorr(x))
sum(z[, 4])
devtools::install_github("gaospecial/ggVennDiagram")
mdl
View(mdl1)
View(rec)
rm(rec)
rm(rec2)
rm(recnew)
summary(mdl1)
rm(mdl1)
rm(mdl2)
rm(mdl3)
head(regdata)
rm(regdata)
head(wr_long)
rm(wr_long)
rm(wrlong2)
library(readr)
crep_fake_som <- read_csv("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_fake_som.csv")
View(crep_fake_som)
crep_fake_som$Item <- as.factor(crep_fake_som)
crep_fake_som$Item <- as.factor(crep_fake_som$Item)
str(crep_fake_som)
library(lme4)
colnames(crep_fake_som)[3] <- "Rating"
mdl <- lmer(Rating ~ 1 + (1|Item) + (1|Rater))
mdl <- lmer(Rating ~ 1 + (1|Item) + (1|Rater), data = crep_fake_som)
View(mdl)
VarCorr(mdl)
View(VarCorr(mdl))
colnames(crep_fake_som) <- c("rater", "item", "rating")
mdl <- lmer(Rating ~ 1 + (1|Item) + (1|Rater), data = crep_fake_som)
mdl <- lmer(rating ~ 1 + (1|item) + (1|rater), data = crep_fake_som)
VarCorr(mdl)
vc <- VarCorr(mdl)
vc[1, 4]
View(vc)
vc <- as.data.frame(VarCorr(mdl))
View(vc)
vc[1, 4]
nlevels(crep_fake_som$item)
psych::ICC
library(psych)
icc(crep_fake_som)
ICC(crep_fake_som)
?ICC
View(crep_fake_som)
library(readr)
crep_fake_som_wide <- read_csv("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_fake_som_wide.csv")
View(crep_fake_som_wide)
ICC(crep_fake_som_wide)
crep_easyicc2 <- function(df, rating = "rating", rater = "rater", item = "item", expert = "", num = c()){
# Mark columns as factors
fdf <- df[,-(c(num, rating))]
fdf <- data.frame(as.factor(fdf))
ndf <- df[, num]
ndf <- data.frame(as.numeric(ndf))
df <- cbind(fdf, ndf)
# Calculate REML model
mdl <- lme4::lmer(df[rating] ~ 1 + (1|df[rater]) + (1|df[item]) + (1|df[rater]:df[item]))
# Extract variance components
vc <- as.data.frame(VarCorr(mdl))
row.names(vc) <- vc[, 1]
icc <- vc[item, 4] / sum(vc[, 4])
#To do: calculate F and p values, then return all as dataframe
# Calculate F
f <- nlevels(rater) * vc[item, 4] / sum(vc[, 4]) + 1
df <- nlevels(item)
p <- pf(f, df, df, lower.tail = FALSE)
}
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc.R")
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2 <- function(df, rating = "rating", rater = "rater", item = "item", expert = "", num = c()){
# Mark columns as factors
fdf <- df[,-(c(num, rating))]
fdf <- data.frame(as.factor(fdf))
ndf <- df[, num]
ndf <- data.frame(as.numeric(ndf))
df <- cbind(fdf, ndf)
# Calculate REML model
mdl <- lme4::lmer(df[rating] ~ 1 + (1|df[rater]) + (1|df[item]) + (1|df[rater]:df[item]))
# Extract variance components
vc <- as.data.frame(VarCorr(mdl))
row.names(vc) <- vc[, 1]
icc <- vc[item, 4] / sum(vc[, 4])
#To do: calculate F and p values, then return all as dataframe
# Calculate F
f <- nlevels(rater) * vc[item, 4] / sum(vc[, 4]) + 1
df <- nlevels(item)
p <- pf(f, df, df, lower.tail = FALSE)
}
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
View(ndf)
View(fdf)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
subset(df, select = -item)
fdf <- subset(crep_fake_som, select = -item)
fdf
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
fdf <- subset(crep_fake_som, select = -c(num, item))
fdf <- subset(crep_fake_som, select = -item)
fdf
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
df[[rater]]
df[rater]
crep_fake_som[["rater"]]
psych::ICC
rater <- "rater"
crep_fake_som[[rater]]
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_fake_som[[rater]]
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
df[[rating]]
df[[rater]]
df[[item]]
lmer(df[[rating]] ~ 1 + (1|df[[rater]]))
lme4::lmer(df[[rating]] ~ 1 + (1|df[[rater]]))
lme4::lmer(df[["rating"]] ~ 1 + (1|df[["rater"]]))
df
df <- crep_fake_som
lmer(rating ~ 1 + (1|rater), data = df)
library(lme4)
lmer(rating ~ 1 + (1|rater), data = df)
lmer(df[[rating]] ~ 1 + (1|df[[rater]]))
lmer(df[["rating"]] ~ 1 + (1|df[["rater"]]))
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
VarCorr
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
View(vc)
nlevels(rater)
nlevels(df[[rater]])
nlevels(df[rater])
df
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
nlevels(df[rater])
nlevels(df[[rater]])
df[rater]
length(df[rater])
length(unique(df[rater]))
unique(df(rater))
unique(df[rater])
nrow(unique(df[rater]))
debugSource("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
degf
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
psych::ICC(crep_fake_som)
psych::ICC(crep_fake_som_wide)
crep_easyicc2(crep_fake_som)
psych::ICC(crep_fake_som_wide)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
source("C:/Users/rmcknny1/OneDrive - The University of Memphis/crep_easyicc_code.R")
crep_easyicc2(crep_fake_som)
df <- data.frame(item = factor(rep(c(1, 2, 3, 4), 2)),
rating = c(2, 2, 3, 4, 1, 2, 3, 2),
rater = rep(c("r1", "r2"), each = 4))
View(df)
crep_icc(df)
crep_easyicc2(df)
crep_easyicc2(df, rater = "item", item = "rater")
psych::ICC(df)
psych::ICC(data.frame(r1 = c(2, 2, 3, 4), r2 = c(1, 2, 3, 4)))
mdl2 <- lme4::lmer(rating ~ (1|rater) + (1|item), data = df)
View(data.frame(VarCorr(mdl2)))
View(data.frame(lme4::VarCorr(mdl2)))
x <- data.frame(lme4::VarCorr(mdl2))
x[1, 4]/sum(x[, 4])
irrICC(data.frame(c(2, 2, 3, 4), c(1, 2, 3, 4)))
?irrICC
library(irrICC)
?icc
?icc2.nointer.fn(data.frame(c(2, 2, 3, 4), c(1, 2, 3, 4)))
icc2.nointer.fn(data.frame(c(2, 2, 3, 4), c(1, 2, 3, 4)))
iccdata1
icc2.nointer.fn(df)
df2 <- data.frame(r1 = c(2, 2, 3, 4), r2 = c(1, 2, 3, 4))
summary(mdl2)
anova(mdl2)
df2
df
psych::ICC(data.frame(r1 = c(2, 2, 3, 4), r2 = c(1, 2, 3, 2)))
crep_easyicc2(df)
library(devtools)
library(roxygen2)
devtools::document()
crep_som <- crep_fake_som
use_data(crep_som)
check?
?check
check(pkg = "CREP")
getwd()
setwd(/)
setwd(\)
setwd(\\)
setwd(//)
getwd()
setwd("..")
getwd()
check("CREP")
pkgbuild::check_build_toold(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
pkgbuild::check_build_tools(debug = TRUE)
check("CREP")
?psych
?lawstat
??lawstat
check("CREP")
use_gpl_license()
crep_anovarep <- function(df, anva, iv_name, dv_name, t_name, c_name, emmeans = FALSE){
tab <- data.frame(matrix(nrow = 1, ncol = 11))
colnames(tab) <- c("T N", "T Mean", "T SD", "C N", "C Mean", "C SD", "F", "p", "g", "PR", "II")
treat <- dplyr::filter(df, df[iv_name] == t_name)
con <- dplyr::filter(df, df[iv_name] == c_name)
tab[1, 1] <- nrow(treat)
if(emmeans == FALSE){
tab[1, 2] <- round(mean(treat[[dv_name]]), 1)
} else {
emean <- ggeffects::ggemmeans(anva, terms = iv_name)
emean_t <- dplyr::filter(emean, x == paste0(t_name))
tab[1, 2] <- round(emean_t[1, 2], 1)
}
tab[1, 3] <- round(sd(treat[[dv_name]]), 1)
tab[1, 4] <- nrow(con)
if(emmeans == FALSE){
tab[1, 5] <- round(mean(con[[dv_name]]), 1)
} else {
emean_c <- dplyr::filter(emean, x == paste0(c_name))
tab[1, 5] <- round(emean_c[1, 2], 1)
}
tab[1, 6] <- round(sd(con[[dv_name]]), 1)
tab[1, 7] <- round(anova(anva)[iv_name, 4], 3)
tab[1, 8] <- round(anova(anva)[iv_name, 5], 3)
tab[1, 9] <- crep_hedges_g(tab[1, 2], tab[1, 3], tab[1, 1], tab[1, 5], tab[1, 6], tab[1, 4])
tab[1, 10] <- crep_ii(tab[1, 9])[1] # percentile rank
tab[1, 11] <- tab[1, 10] - 50 # improvement index
return(tab)
}
mdl <- lm(rating ~ rater, data = df)
crep_anovarep(df, mdl, "rater", "rating", "r1", "r2")
install.packages("pdflatex")
setwd("..")
getwd()
library(goodpractice)
goodpractice("CREP")
testthat(crep_cies_pb)
testthat::test_check(CREP)
testthat::test_check("CREP")
setwd("CREP")
getwd()
testthat::test_dir("R")
testthat::test_dir("R")
library(devtools)
getwd()
setwd("..")
getwd()
build_package(pkg = "CREP", manual = TRUE)
build(pkg = "CREP", manual = TRUE)
build(pkg = "CREP", manual = TRUE)
Sys.getenv("PATH")
View(Sys.getenv("PATH"))
rm(list = ls())
list.files()
setwd("I:\CREP\CREP Project Reports\SSEC Science for the Classroom\1_SSEC Spring 2023 Stanford-10 Teacher Rosters\North Carolina\zFinal Files")
setwd("I:/CREP\CREP Project Reports/SSEC Science for the Classroom/1_SSEC Spring 2023 Stanford-10 Teacher Rosters/North Carolina/zFinal Files")
setwd("I:/CREP/CREP Project Reports/SSEC Science for the Classroom/1_SSEC Spring 2023 Stanford-10 Teacher Rosters/North Carolina/zFinal Files")
list.files()
library(readxl)
baton <- read_excel("Baton Elementary Spring 2023 Stanford-10 Teacher Roster_FINAL.xlsx")[-1,]
View(baton)
baton <- read_excel("Baton Elementary Spring 2023 Stanford-10 Teacher Roster_FINAL.xlsx")
colnames <- unlist(baton[1,])
View(colnames)
colnames(baton) <- baton[1,])
colnames(baton) <- baton[1,]
baton
View(baton)
rcnames <- colnames(baton)
?list.files
filenames <- list.files(pattern="*.xlsx", full.names=TRUE)
ldf <- lapply(filenames, read_excel)
View(ldf)
write.csv(ldf, "ldf.csv")
length(ldf)
nc <- ldf[[1]]
for(i in 2:length(ldf)){
nc <<- rbind(nc, ldf[[i]])
}
View(nc)
write.csv(nc, "North Carolina Pearson.csv")
